// <auto-generated />
using System;
using Diplom.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace Diplom.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20250408221527_discountsV5")]
    partial class discountsV5
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("CategoriesStoreDiscounts", b =>
                {
                    b.Property<int>("CategoriesIdId")
                        .HasColumnType("integer");

                    b.Property<int>("DiscountsId")
                        .HasColumnType("integer");

                    b.HasKey("CategoriesIdId", "DiscountsId");

                    b.HasIndex("DiscountsId");

                    b.ToTable("CategoriesStoreDiscounts", (string)null);
                });

            modelBuilder.Entity("Diplom.Models.Accounts", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<bool>("Sex")
                        .HasColumnType("boolean");

                    b.Property<string>("UserFirstName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("UserLastName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Accounts");
                });

            modelBuilder.Entity("Diplom.Models.CategoriesStore", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<bool>("isActive")
                        .HasColumnType("boolean");

                    b.HasKey("Id");

                    b.ToTable("CategoriesStore");
                });

            modelBuilder.Entity("Diplom.Models.Config", b =>
                {
                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime?>("ValueDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<float?>("ValueFloat")
                        .HasColumnType("real");

                    b.Property<int?>("ValueInt")
                        .HasColumnType("integer");

                    b.Property<string>("ValueString")
                        .HasColumnType("text");

                    b.ToTable("Config");
                });

            modelBuilder.Entity("Diplom.Models.Discounts", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("Amount")
                        .HasColumnType("integer");

                    b.Property<int>("CategoriesStoreId")
                        .HasColumnType("integer");

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("ProductsStoreId")
                        .HasColumnType("integer");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<bool>("isActive")
                        .HasColumnType("boolean");

                    b.Property<bool>("isPrimary")
                        .HasColumnType("boolean");

                    b.HasKey("Id");

                    b.HasIndex("CategoriesStoreId");

                    b.HasIndex("ProductsStoreId");

                    b.ToTable("Discounts");
                });

            modelBuilder.Entity("Diplom.Models.ExchangeDiscounts", b =>
                {
                    b.Property<int>("DiscountExchangeOneId")
                        .HasColumnType("integer");

                    b.Property<int>("DiscountExchangeTwoId")
                        .HasColumnType("integer");

                    b.Property<int>("DiscountId")
                        .HasColumnType("integer");

                    b.HasIndex("DiscountExchangeOneId");

                    b.HasIndex("DiscountExchangeTwoId");

                    b.HasIndex("DiscountId");

                    b.ToTable("ExchangeDiscounts");
                });

            modelBuilder.Entity("Diplom.Models.ExpChanges", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("AccountId")
                        .HasColumnType("integer");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("CurrentBalance")
                        .HasColumnType("integer");

                    b.Property<string>("Discription")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("ExpUserId")
                        .HasColumnType("integer");

                    b.Property<int>("Value")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("AccountId");

                    b.HasIndex("ExpUserId");

                    b.ToTable("ExpChanges");
                });

            modelBuilder.Entity("Diplom.Models.ExpUsersWallets", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("AccountId")
                        .HasColumnType("integer");

                    b.Property<int>("ExpValue")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("AccountId")
                        .IsUnique();

                    b.ToTable("ExpUsersWallets");
                });

            modelBuilder.Entity("Diplom.Models.Orders", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("AccountId")
                        .HasColumnType("integer");

                    b.Property<float>("Amounts")
                        .HasColumnType("real");

                    b.Property<DateTime>("DateLastOrder")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("Id");

                    b.HasIndex("AccountId");

                    b.ToTable("Orders");
                });

            modelBuilder.Entity("Diplom.Models.OrdersHistory", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("AccountId")
                        .HasColumnType("integer");

                    b.Property<float>("Amounts")
                        .HasColumnType("real");

                    b.Property<DateTime>("DateLastOrder")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("Id");

                    b.HasIndex("AccountId");

                    b.ToTable("OrdersHistory");
                });

            modelBuilder.Entity("Diplom.Models.ProductsStore", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<bool>("isActive")
                        .HasColumnType("boolean");

                    b.HasKey("Id");

                    b.ToTable("ProductsStore");
                });

            modelBuilder.Entity("Diplom.Models.UserDiscounts", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("AccountId")
                        .HasColumnType("integer");

                    b.Property<DateTime>("DateAccruals")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("DiscountId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("AccountId");

                    b.HasIndex("DiscountId");

                    b.ToTable("UserDiscounts");
                });

            modelBuilder.Entity("Diplom.Models.UserDiscountsActivated", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("AccountId")
                        .HasColumnType("integer");

                    b.Property<DateTime>("DateActivateDiscount")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("DiscountId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("AccountId");

                    b.HasIndex("DiscountId");

                    b.ToTable("UserDiscountsActivated");
                });

            modelBuilder.Entity("Diplom.Models.UserDiscountsActivatedHistory", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("AccountId")
                        .HasColumnType("integer");

                    b.Property<DateTime>("DateActivateDiscount")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime>("DateDelete")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("DiscountId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("AccountId");

                    b.HasIndex("DiscountId");

                    b.ToTable("UserDiscountsActivatedHistory");
                });

            modelBuilder.Entity("Diplom.Models.UserDiscountsHistory", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("AccountId")
                        .HasColumnType("integer");

                    b.Property<DateTime>("DateAccruals")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime>("DateDelete")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("DiscountId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("AccountId");

                    b.HasIndex("DiscountId");

                    b.ToTable("UserDiscountsHistory");
                });

            modelBuilder.Entity("DiscountsProductsStore", b =>
                {
                    b.Property<int>("DiscountsId")
                        .HasColumnType("integer");

                    b.Property<int>("ProductsIdId")
                        .HasColumnType("integer");

                    b.HasKey("DiscountsId", "ProductsIdId");

                    b.HasIndex("ProductsIdId");

                    b.ToTable("DiscountsProductsStore", (string)null);
                });

            modelBuilder.Entity("CategoriesStoreDiscounts", b =>
                {
                    b.HasOne("Diplom.Models.CategoriesStore", null)
                        .WithMany()
                        .HasForeignKey("CategoriesIdId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Diplom.Models.Discounts", null)
                        .WithMany()
                        .HasForeignKey("DiscountsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Diplom.Models.Discounts", b =>
                {
                    b.HasOne("Diplom.Models.CategoriesStore", "CategoriesStore")
                        .WithMany()
                        .HasForeignKey("CategoriesStoreId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Diplom.Models.ProductsStore", "ProductsStore")
                        .WithMany()
                        .HasForeignKey("ProductsStoreId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CategoriesStore");

                    b.Navigation("ProductsStore");
                });

            modelBuilder.Entity("Diplom.Models.ExchangeDiscounts", b =>
                {
                    b.HasOne("Diplom.Models.Discounts", "DiscountOne")
                        .WithMany()
                        .HasForeignKey("DiscountExchangeOneId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Diplom.Models.Discounts", "DiscountTwo")
                        .WithMany()
                        .HasForeignKey("DiscountExchangeTwoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Diplom.Models.Discounts", "Discount")
                        .WithMany()
                        .HasForeignKey("DiscountId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Discount");

                    b.Navigation("DiscountOne");

                    b.Navigation("DiscountTwo");
                });

            modelBuilder.Entity("Diplom.Models.ExpChanges", b =>
                {
                    b.HasOne("Diplom.Models.Accounts", "Accounts")
                        .WithMany()
                        .HasForeignKey("AccountId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Diplom.Models.ExpUsersWallets", "ExpUsersWallets")
                        .WithMany()
                        .HasForeignKey("ExpUserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Accounts");

                    b.Navigation("ExpUsersWallets");
                });

            modelBuilder.Entity("Diplom.Models.ExpUsersWallets", b =>
                {
                    b.HasOne("Diplom.Models.Accounts", "Accounts")
                        .WithOne("ExpUserWallets")
                        .HasForeignKey("Diplom.Models.ExpUsersWallets", "AccountId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Accounts");
                });

            modelBuilder.Entity("Diplom.Models.Orders", b =>
                {
                    b.HasOne("Diplom.Models.Accounts", "Accounts")
                        .WithMany()
                        .HasForeignKey("AccountId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Accounts");
                });

            modelBuilder.Entity("Diplom.Models.OrdersHistory", b =>
                {
                    b.HasOne("Diplom.Models.Accounts", "Accounts")
                        .WithMany()
                        .HasForeignKey("AccountId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Accounts");
                });

            modelBuilder.Entity("Diplom.Models.UserDiscounts", b =>
                {
                    b.HasOne("Diplom.Models.Accounts", "Accounts")
                        .WithMany()
                        .HasForeignKey("AccountId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Diplom.Models.Discounts", "Discounts")
                        .WithMany()
                        .HasForeignKey("DiscountId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Accounts");

                    b.Navigation("Discounts");
                });

            modelBuilder.Entity("Diplom.Models.UserDiscountsActivated", b =>
                {
                    b.HasOne("Diplom.Models.Accounts", "Accounts")
                        .WithMany()
                        .HasForeignKey("AccountId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Diplom.Models.Discounts", "Discounts")
                        .WithMany()
                        .HasForeignKey("DiscountId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Accounts");

                    b.Navigation("Discounts");
                });

            modelBuilder.Entity("Diplom.Models.UserDiscountsActivatedHistory", b =>
                {
                    b.HasOne("Diplom.Models.Accounts", "Accounts")
                        .WithMany()
                        .HasForeignKey("AccountId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Diplom.Models.Discounts", "Discounts")
                        .WithMany()
                        .HasForeignKey("DiscountId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Accounts");

                    b.Navigation("Discounts");
                });

            modelBuilder.Entity("Diplom.Models.UserDiscountsHistory", b =>
                {
                    b.HasOne("Diplom.Models.Accounts", "Accounts")
                        .WithMany()
                        .HasForeignKey("AccountId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Diplom.Models.Discounts", "Discounts")
                        .WithMany()
                        .HasForeignKey("DiscountId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Accounts");

                    b.Navigation("Discounts");
                });

            modelBuilder.Entity("DiscountsProductsStore", b =>
                {
                    b.HasOne("Diplom.Models.Discounts", null)
                        .WithMany()
                        .HasForeignKey("DiscountsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Diplom.Models.ProductsStore", null)
                        .WithMany()
                        .HasForeignKey("ProductsIdId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Diplom.Models.Accounts", b =>
                {
                    b.Navigation("ExpUserWallets")
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
